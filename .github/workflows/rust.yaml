name: Rust

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request:
    branches:
      - "**"

concurrency:
  group: ${{ github.event_name == 'pull_request' && format('{0}-{1}', github.workflow_ref, github.event.pull_request.number) || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: Test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - macos-14
          - macos-15
          - ubuntu-22.04
          - ubuntu-24.04
          - ubuntu-22.04-arm
          - ubuntu-24.04-arm
          - windows-2022
          - windows-2025
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@1.85.0
        with:
          components: rustfmt, clippy

      - name: fmt
        run: cargo fmt --all --check

      - name: Clippy
        run: cargo clippy --workspace --all-features --all-targets -- -D warnings

      - name: Test (debug)
        run: cargo test --all --all-features

      - name: Test (release)
        run: cargo test --all --release --all-features


  build-crate:
    name: Build Crate
    runs-on: ubuntu-24.04
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install cargo-workspaces
        run: cargo install cargo-workspaces --locked

      - name: Publish (dry run)
        run: cargo ws publish --publish-as-is --dry-run

      - name: Upload crate artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crate
          path: ./target/package/*-*.crate

      - name: Publish (crates.io)
        if: startsWith(github.event.ref, 'refs/tags')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.cargo_registry_token }}
        run: cargo ws publish --publish-as-is
