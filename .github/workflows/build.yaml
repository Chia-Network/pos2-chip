name: Build

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request:
    branches:
      - "**"

concurrency:
  group: ${{ github.event_name == 'pull_request' && format('{0}-{1}', github.workflow_ref, github.event.pull_request.number) || github.run_id }}
  cancel-in-progress: true

jobs:
  build-package:
    name: Build ${{ matrix.os }}-${{ matrix.mode }}-${{ matrix.toolchain }} ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - macos-14
          - macos-15
          - ubuntu-22.04
          - ubuntu-24.04
          - windows-2022
          - windows-2025
        mode:
          - Release
          - Debug
        compiler: [""]
        toolchain: [default]
        include:
          - os: macos-14
            toolchain: ubsan
            mode: Debug
          - os: macos-14
            toolchain: asan
            mode: Debug
          - os: macos-14
            mode: Release
            toolchain: tsan
          - os: ubuntu-24.04
            mode: Debug
            toolchain: ubsan
          - os: ubuntu-24.04
            mode: Debug
            toolchain: asan
          - os: ubuntu-24.04
            mode: Release
            toolchain: tsan
          - os: ubuntu-24.04
            mode: Release
            compiler: clang
            toolchain: default
          - os: ubuntu-24.04
            mode: Release
            compiler: clang
            toolchain: ubsan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Select Clang
        if: ${{ matrix.compiler == 'clang' }}
        run: |
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
      - name: Build
        run: |
          cmake -B build -DCMAKE_COMPILE_WARNING_AS_ERROR=ON -DCMAKE_BUILD_TYPE=${{ matrix.mode }} --toolchain ${{ matrix.toolchain }}.cmake
          cmake --build build --config ${{ matrix.mode }}
      - name: Test
        run: |
            cd build
            ctest --output-on-failure -j 4 -C ${{ matrix.mode }}
      - name: Plotter (Windows)
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |
          build\src\tools\plotter\${{ matrix.mode }}\plotter.exe test 18 0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF 2
          build\src\tools\prover\${{ matrix.mode }}\prover.exe challenge 5700000000000000000000000000000000000000000000000000000000000000 plot_18_2_0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF.bin 1
      - name: Plotter
        if: ${{ !startsWith(matrix.os, 'windows') }}
        run: |
          build/src/tools/plotter/plotter test 18 0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF 2
          build/src/tools/prover/prover challenge 5700000000000000000000000000000000000000000000000000000000000000 plot_18_2_0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF.bin 1
      - name: Benchmark (Windows)
        if: ${{ matrix.mode == 'Release' && startsWith(matrix.os, 'windows') }}
        run: |
          build\src\tools\solver\${{ matrix.mode }}\solver.exe benchmark 28
      - name: Benchmark
        if: ${{ matrix.mode == 'Release' && !startsWith(matrix.os, 'windows') }}
        run: |
          build/src/tools/solver/solver benchmark 28


